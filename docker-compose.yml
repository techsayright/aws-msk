---
version: "2"
services:
  schema-registry:
    image: confluentinc/cp-schema-registry:5.1.2
    hostname: schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "b-3.democluster2.09x7h6.c19.kafka.us-east-1.amazonaws.com:9096,b-1.democluster2.09x7h6.c19.kafka.us-east-1.amazonaws.com:9096,b-2.democluster2.09x7h6.c19.kafka.us-east-1.amazonaws.com:9096"
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SASL_SSL
      SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: AWS_MSK_IAM
      SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG: 'software.amazon.msk.auth.iam.IAMLoginModule required username="darsh" password="darsh-secret";'
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "http"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: ERROR
      SCHEMA_REGISTRY_AVRO_COMPATIBILITY_LEVEL: "none"

  connect:
    build: ./custom-connectors
    hostname: connect
    container_name: connect
    depends_on:
      - schema-registry
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "b-3.democluster2.09x7h6.c19.kafka.us-east-1.amazonaws.com:9096,b-1.democluster2.09x7h6.c19.kafka.us-east-1.amazonaws.com:9096,b-2.democluster2.09x7h6.c19.kafka.us-east-1.amazonaws.com:9096"
      CONNECT_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_SASL_MECHANISM: AWS_MSK_IAM
      CONNECT_SASL_JAAS_CONFIG: 'software.amazon.msk.auth.iam.IAMLoginModule required username="darsh" password="darsh-secret";'
      CONNECT_CONSUMER_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_CONSUMER_SASL_MECHANISM: AWS_MSK_IAM
      CONNECT_CONSUMER_SASL_JAAS_CONFIG: 'software.amazon.msk.auth.iam.IAMLoginModule required username="darsh" password="darsh-secret";'
      CONNECT_PRODUCER_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_PRODUCER_SASL_MECHANISM: AWS_MSK_IAM
      CONNECT_PRODUCER_SASL_JAAS_CONFIG: 'software.amazon.msk.auth.iam.IAMLoginModule required username="darsh" password="darsh-secret";'

      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_REPLICATION_FACTOR: 3
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR

  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:6.1.1
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - connect
    ports:
      - "8088:8088"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_BOOTSTRAP_SERVERS: "b-3.democluster2.09x7h6.c19.kafka.us-east-1.amazonaws.com:9096,b-1.democluster2.09x7h6.c19.kafka.us-east-1.amazonaws.com:9096,b-2.democluster2.09x7h6.c19.kafka.us-east-1.amazonaws.com:9096"
      KSQL_HOST_NAME: ksqldb-server
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      KSQL_KSQL_CONNECT_URL: "http://connect:8083"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 3
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"

  ksqldb-cli:
    image: confluentinc/cp-ksqldb-cli:6.1.1
    container_name: ksqldb-cli
    depends_on:
      - connect
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true

  ksql-datagen:
    image: confluentinc/ksqldb-examples:6.1.1
    hostname: ksql-datagen
    container_name: ksql-datagen
    depends_on:
      - schema-registry
      - connect
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
      cub kafka-ready -b b-3.democluster2.09x7h6.c19.kafka.us-east-1.amazonaws.com:9096,b-1.democluster2.09x7h6.c19.kafka.us-east-1.amazonaws.com:9096,b-2.democluster2.09x7h6.c19.kafka.us-east-1.amazonaws.com:9096 1 40 && \
      echo Waiting for Confluent Schema Registry to be ready... && \
      cub sr-ready schema-registry 8081 40 && \
      echo Waiting a few seconds for topic creation to finish... && \
      sleep 11 && \
      tail -f /dev/null'"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      STREAMS_BOOTSTRAP_SERVERS: "b-3.democluster2.09x7h6.c19.kafka.us-east-1.amazonaws.com:9096,b-1.democluster2.09x7h6.c19.kafka.us-east-1.amazonaws.com:9096,b-2.democluster2.09x7h6.c19.kafka.us-east-1.amazonaws.com:9096"
      STREAMS_SCHEMA_REGISTRY_HOST: schema-registry
      STREAMS_SCHEMA_REGISTRY_PORT: 8081

  ##ALL SOURCES ADDED HERE

  mongo1:
    image: "mongo:4.0"
    container_name: mongo1
    command: --replSet rs0 --smallfiles --oplogSize 128
    volumes:
      - rs1:/data/db
      - ./mongo/init.sh:/usr/local/bin/init.sh
      - $PWD:/home/config
    ports:
      - "27017:27017"
    restart: always

  mongo2:
    image: "mongo:4.0"
    container_name: mongo2
    command: --replSet rs0 --smallfiles --oplogSize 128
    volumes:
      - rs2:/data/db
    ports:
      - "27018:27017"
    restart: always

volumes:
  rs1:
  rs2:
