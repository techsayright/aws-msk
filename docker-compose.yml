---
version: "2"
services:
  schema-registry:
    image: confluentinc/cp-schema-registry:5.1.2
    hostname: schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "SASL_SSL://b-2.democluster2.xuzmdj.c2.kafka.us-east-1.amazonaws.com:9096,SASL_SSL://b-3.democluster2.xuzmdj.c2.kafka.us-east-1.amazonaws.com:9096,SASL_SSL://b-1.democluster2.xuzmdj.c2.kafka.us-east-1.amazonaws.com:9096"
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SASL_SSL
      SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: SCRAM-SHA-512
      SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG: 'org.apache.kafka.common.security.scram.ScramLoginModule required username="darsh" password="darsh-secret";'
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "http"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: ERROR
      SCHEMA_REGISTRY_AVRO_COMPATIBILITY_LEVEL: "none"

  connect:
    build: ./custom-connectors
    hostname: connect
    container_name: connect
    depends_on:
      - schema-registry
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "b-2.democluster2.xuzmdj.c2.kafka.us-east-1.amazonaws.com:9096,b-3.democluster2.xuzmdj.c2.kafka.us-east-1.amazonaws.com:9096,b-1.democluster2.xuzmdj.c2.kafka.us-east-1.amazonaws.com:9096"
      CONNECT_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_SASL_MECHANISM: SCRAM-SHA-512
      CONNECT_SASL_JAAS_CONFIG: 'org.apache.kafka.common.security.scram.ScramLoginModule required username="darsh" password="darsh-secret";'
      CONNECT_CONSUMER_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_CONSUMER_SASL_MECHANISM: SCRAM-SHA-512
      CONNECT_CONSUMER_SASL_JAAS_CONFIG: 'org.apache.kafka.common.security.scram.ScramLoginModule required username="darsh" password="darsh-secret";'
      CONNECT_PRODUCER_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_PRODUCER_SASL_MECHANISM: SCRAM-SHA-512
      CONNECT_PRODUCER_SASL_JAAS_CONFIG: 'org.apache.kafka.common.security.scram.ScramLoginModule required username="darsh" password="darsh-secret";'

      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_REPLICATION_FACTOR: 3
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://localhost:8081
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR

  sql-client:
    build: ./client-image
    image: demo/debezium-flink-sql
    depends_on:
      - broker0
      - broker1
      - broker2
      - jobmanager
    environment:
      FLINK_JOBMANAGER_HOST: jobmanager
      ZOOKEEPER_CONNECT: zookeeper
      KAFKA_BOOTSTRAP: "b-2.democluster2.xuzmdj.c2.kafka.us-east-1.amazonaws.com:9096,b-3.democluster2.xuzmdj.c2.kafka.us-east-1.amazonaws.com:9096,b-1.democluster2.xuzmdj.c2.kafka.us-east-1.amazonaws.com:9096"
  jobmanager:
    image: flink:1.12.1-scala_2.11
    ports:
      - "8082:8082"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
  taskmanager:
    image: flink:1.12.1-scala_2.11
    depends_on:
      - jobmanager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager

  ##ALL SOURCES ADDED HERE

  mongo1:
    image: "mongo:4.0"
    container_name: mongo1
    command: --replSet rs0 --smallfiles --oplogSize 128
    volumes:
      - rs1:/data/db
      - ./mongo/init.sh:/usr/local/bin/init.sh
      - $PWD:/home/config
    ports:
      - "27017:27017"
    restart: always

  mongo2:
    image: "mongo:4.0"
    container_name: mongo2
    command: --replSet rs0 --smallfiles --oplogSize 128
    volumes:
      - rs2:/data/db
    ports:
      - "27018:27017"
    restart: always

volumes:
  rs1:
  rs2:
